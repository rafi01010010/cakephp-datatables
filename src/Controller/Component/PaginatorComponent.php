<?php

namespace App\Controller\Component;

use Cake\Controller\Component;
use Cake\Controller\ComponentRegistry;
use Cake\Database\Schema\TableSchema;

/**
 * Paginator component
 */
class PaginatorComponent extends Component\PaginatorComponent {
    /**
     * Default configuration.
     *
     * @var array
     */
    /*protected $_defaultConfig = [
        'page' => 1,
        'limit' => 20,
        'maxLimit' => 100,
        'whitelist' => ['limit', 'sort', 'page', 'direction','conditions']
    ];*/



    public function initialize(array $config) {
        parent::initialize($config); // TODO: Change the autogenerated stub

    }

    public function paginate($object, array $settings = []) {


        $controller = $this->getController();
        $request = $controller->getRequest();
        if (isset($settings['datatable'])){
            $dataTableQuery = $request->getQuery();
            //$request->query = []; // clear all query parameters
            if (isset($dataTableQuery['order'][0]['column'])) {
                if (isset($dataTableQuery['columns'][$dataTableQuery['order'][0]['column']]['data'])) {
                    if(isset($settings['datatable']['sort_exchange'][$dataTableQuery['columns'][$dataTableQuery['order'][0]['column']]['data']])){
                        $settings['order'] = [$settings['datatable']['sort_exchange'][$dataTableQuery['columns'][$dataTableQuery['order'][0]['column']]['data']]=>$dataTableQuery['order'][0]['dir']];
                    }else{
                        $settings['order'] = [$dataTableQuery['columns'][$dataTableQuery['order'][0]['column']]['data']=>$dataTableQuery['order'][0]['dir']];
                    }
                }
            }
            foreach ($dataTableQuery['columns'] as $c) {
                if (isset($c['search']['value']) && trim($c['search']['value']) != "") {
                    if(is_numeric($c['search']['value']) || is_float($c['search']['value'])){
                        $settings['conditions'][$c['data']] =$c['search']['value'];
                    }else{
                        $settings['conditions'][$c['data'] . " LIKE"] = "%" . $c['search']['value'] . "%";
                    }


                }
            }
            if (isset($dataTableQuery['start']) && $dataTableQuery['length']) {
                $settings['limit'] = $dataTableQuery['length'];
                if ($dataTableQuery['start'] != 0) {
                    $controller->setRequest($request->withQueryParams([
                        'page' => intdiv($dataTableQuery['start'], $settings['limit']) + 1
                    ]));
                }
            }
        }
        $result = parent::paginate($object, $settings);
        if (isset($settings['datatable'])) {
            $response['data'] = $result;
            $response['recordsTotal'] = $this->request->getParam('paging')[$object->getAlias()]['count'];
            $response['recordsFiltered'] = $this->request->getParam('paging')[$object->getAlias()]['count'];
            return $response;

        } else {
            return $result;
        }
    }
}
